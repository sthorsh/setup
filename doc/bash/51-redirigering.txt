File descriptor
  Stdin: fd0 (bash)
  Stdout: fd1 (bash)
  Stderr: fd2 (bash)
  Others: fd3..fd255

File descriptor table
  fd0 ---> /dev/pts1
  fd1 ---> /dev/pts1
  fd2 ---> /dev/pts1
  fdN ---> ...

Operations
  Open
  Close
  Read
  Write
  Copy/duplicate

Redirections
  <file         redirect file to stdin (fd 0)
  <<EOL         redirect a bunch of text to stdin (fd 0) (HERE)
  <<<"a b c"    redirect a single line of text to stdin

  >file         redirect stdout (fd 1) to file
  >/dev/null    redirect stdout (fd 1) to be discarded

  2>file        redirect stderr (fd 2) to file

  >file 2>&1    redirect stdout and duplicate stderr (left-to-right)
  





 --------------------------------------------------

Redirection
  • allows commands’ file handles to be opened, closed, duplicated, made to refer to different files
  • can change the files the command reads from and writes to
  • may also be used to modify file handles in the current shell execution environment

Redirection operators
  • may precede a simple command
  • may appear anywhere within a simple command
  • may follow a simple command

Redirections
  • the rhs i.e <word> undergo expansions and quote removal
  • are processed in the order they appear, from left to right
  • the order of redirections is significant e.g > 2>&1 not 2>&1 >

Command/process I/O
  • Input: stdin kbd, ...
  • Output: stdout screen, ...
  • Error: stderr screen, ...

Filer
  • /dev/fd/N 
  • /dev/null
  • /dev/stdin
  • /dev/stdout
  • /dev/stderr
  • Redirections using file descriptors greater than 9 should be used with care, as they may
conflict with file descriptors the shell uses internally.

Notation
  redirection-operator<word>
  <file-descriptor-number>redirection-operator<word>
  <varname>redirection-operator<word>

Stdin
  <word          input
  ...

Stdout
  >word          output
  >|word         force output
  >>word         append output
  ...

Stdout/stderr
  &>word         som >word 6>&1
  &>>word        som >>word 2>&1
  ...

