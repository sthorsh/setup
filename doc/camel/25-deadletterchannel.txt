RedeliveryErrorHandler.process()
  target = FatalFallbackErrorHandler
  deliverToFailureProcessor()
  exchange:
    CREATED_TIMESTAMP = ...
    ERRORHANDLER_HANDLED = true (routing breaks)
    EXCEPTION_CAUGHT = CamelExecutionException 
    EXTERNAL_REDELIVERED = ...
    FAILURE_ENDPOINT = ...
    FAILURE_HANDLED = true
    FAILURE_ROUTE_ID = ...
    FATAL_FALLBACK_ERROR_HANDLER = ...
    MESSAGE_HISTORY = ...
    TO_ENDPOINT = log://logger
    exception = null
    ...

RedeliveryErrorHandler.deliverToFailureProcessor()
  exchange.setException(null)
  exchange.setProperty(Exchange.FAILURE_ENDPOINT, ...)
  exchange.setProperty(Exchange.FAILURE_ROUTE_ID, ...)
  fatalFallbackErrorHandler.process(exchange, ...)
  prepareExchangeAfterFailure()
  log exhausted delivery

RedeliveryErrorHandler.prepareExchangeAfterFailure()
  exchange.setProperty(Exchange.FAILURE_HANDLED, true) 
  exchange.setProperty(Exchange.ERRORHANDLER_HANDLED, true)

FatalFallbackErrorHandler.process()
  sendProcessor.process(exchange, ...)

SendProcessor.process()
  exchange.setProperty(Exchange.TO_ENDPOINT, ...)
  try { logProducer.process(exchange, ...) }
  catch (Throwable t) { exchange.setException(t) }

LogProducer.process()
  camelLogProcessor.process(exchange, ...) 

CamelLogProcessor.process()
  log.log(output)

