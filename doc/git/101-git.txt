GIT                                                   

  git TAB                                           
  
  git help                                          
  git help --all|config|guides                      
  git help CMD                                      
  git help GUIDE                                    
  
  git config                                       bruk
  git config --list --show-scope --show-origin     list
  git config section.key                           get verdi feks user.name
  git config section.key value                     set value
  
  git clone URL [DIR]                              klone prosjekt

  git init [DIR]                                   initialiser prosjekt
  
  --------------------
  git status --ignored                             branch, upstream, staged, unstaged, untracked, ignored

  git diff [PATHS]                                 wtree vs index
  git diff R|C [PATHS]                             wtree vs commit
  git diff --staged [PATHS]                        index vs HEAD
  git diff --staged R|C [PATHS]                    index vs commit
  git diff R|C R|C [PATHS]                         commit vs commit
  git diff R|C...R|C [PATHS]                       git diff $(git merge-base A B) B
  
  git log                                          commitlog
  git log -5                                       5 siste
  git log --all                                    alle refs
  git log --oneline                                en linje
  git log --graph                                  graf
  git log --decorate=full                          prefiks refs
  git log [opts] PATH                              fil
  
  git reflog [OPTS]                                referanselog
  
  git blame FILE                                   annotasjoner

  ----------------
  git stash -m MSG                                 stash<wtree<index
  git stash list                                   list
  git stash show ENTRY                             show entry
  git stash apply ENTRY                            stash>wtree>index
  git stash pop ENTRY                              stash>wtree>index; stash drop
  git stash drop ENTRY                             drop entry
  git stash clear                                  clear list
    
  git stage PATH                                   stage untracked|modified|deleted fil(er)
    
  git mv PATH NEW_NAME                             mv wtree>index

  git rm PATH                                      rm wtree>index
  git rm --cached PATH                             rm index

  git reset₁ [HEAD] [PATH]                         unstage ie index<HEAD
  git reset₁ --hard [HEAD]                         discard ie wtree<index<HEAD

  git restore PATH                                 restore dvs wtree<index
  git restore --staged PATH                        unstage dvs index<HEAD
  git restore --staged --worktree PATH             discard dvs wtree<index<HEAD
    
  ---------------
  git commit [FILES] -m MSG                        ny commit; set branch|HEAD
  git commit -am MSG                               stage; commit
  git commit --amend -m MSG                        ny amend_commit; set branch|HEAD
    
  git reset₂ R|C [PATH]                            set branch|HEAD; unstage
  git reset₂ --soft R|C                            set branch|HEAD
  git reset₂ --hard R|C                            set branch|HEAD; discard

  git revert R|C                                   ny revert_commit; set branch|HEAD
    
  git branch -avv                                  vis local branches, upstreams, tracking branches
  git branch b [R|C]                               ny branch
  git branch b --track origin/b                    ny branch; set upstream
  git branch b --move new_name                     rename branch
  git branch b --set-upstream-to origin/b          set upstream
  git branch b --unset-upstream                    unset upstream
  git branch b --delete                            slett branch
  git branch origin/b --delete --remotes           slett tracking branch
                                                                                          
  git tag                                          vis tags
  git tag t [R|C]                                  ny tag
  git tag t --annotate -m MSG                      ny annotert tag
  git tag t --delete                               slett tag
    
  git checkout R|C                                 set HEAD; oppdater wtree<index<R|C
  git checkout -b b [R|C]                          create b; checkout
  git checkout --track origin/b                    create b; set upstream; checkout 
      
  git switch b                                     set HEAD; wtree<index<HEAD
  git switch --create b [R|C]                      ny branch; mv switch

  git cherry-pick R|C ...                          ny cherry_commit; set branch|HEAD; update wtree<index<HEAD
      
  git merge₁ R|C -m msg                            ny merge_commit; set branch|HEAD EL set branch|HEAD (ff merge)
  git merge₁ --abort|quit|continue                 hvis konflikt
    
  git rebase BRANCH                                set HEAD; nye rebase_commits; set HEAD; set branch
  git rebase -i BRANCH                             interaktive rebase
  git rebase --abort|quit|skip|continue            hvis konflikt
    
  -------------
  git remote -v                                    vis remotes
  git remote -v update [REMOTE]                    fetch updates
  git remote add REMOTE URL                        nytt innslag i .git/config
  git remote remove REMOTE                         slett innslag i .git/config
    
    git fetch -v                                     git fetch origin remote.origin.fetch
    git fetch -v REMOTE                              git fetch REMOTE remote.REMOTE.fetch
    git fetch -v REMOTE REFSPEC                      git fetch REMOTE remote_branch:tracking_branch

    git merge₂ -m msg                                git merge UPSTREAM

    git pull [--rebase] -v                           fetch; ff-merge|merge|rebase
    git pull [--rebase] -v REMOTE                    fetch; ff-merge|merge|rebase
    git pull [--rebase] -v REMOTE REFSPEC            fetch; ff-merge|merge|rebase
    
    git push -v                                      eq git push -v branch.*.remote push.default
    git push -v REMOTE                               ...
    git push -v REMOTE REFSPEC                       cp local src to remote dst
    git push -d -v REMOTE REFSPEC                    delete tracking og remote branch
    git push -u -v REMOTE REFSPEC                    set upstream; ny tracking og remote branch
    
