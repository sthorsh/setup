GIT

git help
git help CMD

-------------------
git config 
git config --list

-------------------
git init [DIR]                      init new project

git clone REPO [DIR]                clone existing project

----------
git status [--short]
  
git diff                            unstaged changes (git status: red)
git diff --cached                   staged changes (git status: green)
git diff HEAD                       unstaged + staged changes
git diff BRANCH1 BRANCH2            diff branch tips
git diff BRANCH1...BRANCH2          diff branch1 base
git diff BRANCH1 BRANCH2 FILE       diff file
git diff COMMIT                     diff wtree commit
git diff --cached COMMIT            diff index commit
git diff COMMIT1 COMMIT2            diff commits

git log -5 
git log --all 
git log --graph 
git log --oneline
git log BRANCH 

git reflog

git show <ref>
git show <commit>

git blame <file>

-------------------
git branch -av                      show all verbose
git branch b1                       create
git branch -m old new               rename
git branch -d b1                    delete
                                    
git tag                             show  
git tag t1                          create
git tag -a t1 -m "."                create
git tag -d t1                       delete
                             
-------------------
git add PATH                        stage filer
git add --patch FILE                stage hunks

git mv SRC DST                      rename fil(er)

git rm FILE                         rm fra wtree og index
git rm FILE --cached                rm fra index (unstage)

--------------------
git commit -am "..."                commit filer
git commit --patch ...              commit hunks

-------------------                
git checkout -b b1                  create-checkout branch
git checkout BRANCH                 checkout target branch (cf switch)
git checkout COMMIT                 checkout commit (detached HEAD)
git checkout --track REPO/REF       start tracking remote branch                                    
git checkout HEAD FILE              wtree<index<repo (filer)
git checkout --patch HEAD           wtree<index<repo (hunks)
        
git switch b1                       mv HEAD; update index; update wtree
                                    
git restore <file>                  wtree<index<repo (discard)
git restore --staged  <file>        index<repo (unstage)

-------------------
git merge SOURCE -m "..."           ff-merge or merge-commit
git merge --abort                   abort merge
                                    
git cherry-pick COMMIT

git rebase master                   mv HEAD to master, cp/replay commits, mv HEAD, mv b1
git rebase -i master                pick, squash etc

git reset HEAD                      align index/repo (unstage) 
git reset --hard HEAD               align wtree/index/repo
git reset HEAD file                 align index/repo (unstage) 
git reset --soft COMMIT             mv current branch
git reset COMMIT                    mv current branch; align index/repo
git reset --hard COMMIT             mv current branch; align wtree/index/repo

-------------------
git stash list
git stash show
git stash --include-untracked       stash <- wtree/index
git stash apply stash@{0}           stash -> wtree/index
git stash clear                     

-------------------
git remote -v
git remote add NAME URL
  
git fetch

git pull --no-rebase
git pull --ff
git pull --rebase

git push REPO REF
git push -u REPO REF                push new branch â†’ merge/pull request url
git push -d REPO REF                delete remote branch
  
