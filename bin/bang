#! /bin/bash

# To run this script, do:
# wget --user=sthorsh --ask-password https://raw.githubusercontent.com/sthorsh/setup/master/bin/bang
# chmod +x bang
# ~/.bang

# Version numbers
IDEA_VERSION=2018.3.2
MAVEN_VERSION=3.5.4
SLACK_VERSION=3.3.3
SQUIRREL_VERSION=3.8.1

# Reminder before running this script
echo "check version numbers, remove this line, run again..." && exit 0

# Get package list before patching os
echo "getting package list from github..."
wget --directory-prefix=etc --user=sthorsh --ask-password https://raw.githubusercontent.com/sthorsh/setup/master/etc/dpkg-get-selections.log

# Patch Ubuntu
echo "patching ubuntu and installing packages..."
sudo apt-get update && apt-get -u dist-upgrade
sudo apt-get install -y dselect
sudo dselect update
sudo dpkg --set-selections < ~/etc/dpkg-get-selections.log
sudo apt-get -u dselect-upgrade

# To avoid error on first pull from github
echo "removing package list..."
if [ -f ~/etc/dpkg-get-selections.log ]; then rm ~/etc/dpkg-get-selections.log; fi

# Install Chrome
if command -v google-chrome-stable > /dev/null 2>&1
then
  echo "chrome already installed..."
else
  echo "installing chrome..."
  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
  sudo sh -c 'echo "deb https://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
  sudo apt-get update
  sudo apt-get install google-chrome-stable
fi
  
# Configure Gnome
echo "configuring gnome..."
# capslock to ctrl
gsettings set org.gnome.desktop.input-sources xkb-options "['caps:ctrl_modifier']"
# disable alt-pipe
gsettings set org.gnome.desktop.wm.keybindings switch-group "['disabled']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-left "['disabled']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-right "['disabled']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-up "['disabled']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-down "['disabled']"
gsettings set org.gnome.settings-daemon.plugins.media-keys terminal "[disabled]"
gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings:/ close-tab "[disabled]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-up []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-left []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-right []
# ij ctrl-alt-left
gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-left []

# Create directories
echo "creating directories..."
if [ ! -e ~/bin ]; then mkdir ~/bin; fi
if [ ! -e ~/dev ]; then mkdir ~/dev; fi
if [ ! -e ~/doc ]; then mkdir ~/doc; fi
if [ ! -e ~/etc ]; then mkdir ~/etc; fi
if [ ! -e ~/install ]; then mkdir ~/install; fi
if [ ! -e ~/tmp ]; then mkdir ~/tmp; fi

# Remove directories
echo "removing directories and files..."
if [ -d ~/Documents ]; then rm -rf ~/Documents/; fi
if [ -d ~/Music ]; then rm -rf ~/Music/; fi
if [ -d ~/Public ]; then rm -rf ~/Public/; fi
if [ -d ~/Templates ]; then rm -rf ~/Templates/; fi
if [ -d ~/Videos ]; then rm -rf ~/Videos/; fi
if [ -f ~/examples.desktop ]; then rm ~/examples.desktop; fi

# Install Java
if command -v java > /dev/null 2>&1
then
  echo "java installed..."
else
  echo "installing java..."
  sudo add-apt-repository ppa:webupd8team/java
  sudo apt-get update
  sudo apt-get install -y oracle-java8-set-default
  sudo ln -sf /usr/lib/jvm/java-8-oracle/ /usr/lib/jvm/java
fi

# Install Intellij
if command -v /usr/lib/idea-IC/bin/idea.sh > /dev/null 2>&1
then
    echo "intellij installed..."
  else
    echo "installing intellij..."
    wget --directory-prefix=install https://download.jetbrains.com/idea/ideaIC-${IDEA_VERSION}-no-jdk.tar.gz
    sudo tar -xf install/ideaIC-${IDEA_VERSION}-no-jdk.tar.gz -C /usr/lib
  fi

# Install Maven
if command -v mvn > /dev/null 2>&1
then
  echo "maven installed..."
else
  echo "installing maven..."
  wget --directory-prefix=install http://apache.uib.no/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
  sudo tar -xf install/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /usr/lib
  sudo ln -sf /usr/lib/apache-maven-${MAVEN_VERSION}/ /usr/lib/apache-maven
fi

# Install Slack
if command -v slack > /dev/null 2>&1
then
  echo "slack installed..."
else
  echo "installing slack..."
  wget --directory-prefix=install "https://downloads.slack-edge.com/linux_releases/slack-desktop-${SLACK_VERSION}-amd64.deb"
  sudo apt-get install gdebi-core -y
  sudo gdebi install/slack-desktop-${SLACK_VERSION}-amd64.deb
fi

# Install Squirrel
if [ -f /usr/lib/squirrelsql/squirrel-sql.sh ]
then
  echo "squirrel installed..."
else
  echo "installing squirrel..."
  wget --directory-prefix=install https://sourceforge.net/projects/squirrel-sql/files/1-stable/${SQUIRREL_VERSION}-plainzip/squirrelsql-${SQUIRREL_VERSION}-standard.zip
  sudo unzip install/squirrelsql-${SQUIRREL_VERSION}-standard.zip -d /usr/lib > /dev/null
  sudo ln -sf /usr/lib/squirrelsql-${SQUIRREL_VERSION}-standard/ /usr/lib/squirrelsql
  sudo chmod -R +x /usr/lib/squirrelsql
fi

# Backup bashrc before first pull from github
if [ ! -f ~/.bashrc-ubuntu ]; then mv ~/.bashrc ~/.bashrc-ubuntu; fi

# Configure git
if git remote -v | grep origin > /dev/null 2>&1; 
then 
  echo "git already configured..."
else 
  echo "configure git..."
  git config --global user.name svein
  git config --global user.email sthorsh@gmail.com
  git init
  git remote add origin https://github.com/sthorsh/setup.git
fi

# First pull from github
echo "first pull from github..."
git pull --rebase origin master
  
# Configure tmux
if [ -d ~/.tmux/plugins/tpm ]
then
  echo "tmux already configured..."
else
  echo "configure tmux..."
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

# Configure vim
if [ -d ~/.vim/bundle/Vundle.vim ]
then
  echo "vim already configured..."
else
  echo "configure vim..."
  git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
  vim +BundleInstall +qall
fi

# Create ssh key
if [ -f ~/.ssh/id_rsa.pub ]
then 
  echo "ssh key already exists..."
else
  echo "creating ssh key..."
  ssh-keygen -t rsa -b 4096 -C "."
fi

# Pin to desktop
dconf write /org/gnome/shell/favorite-apps "[
  'google-chrome.desktop',
  'gnome-control-center.desktop',
  'gnome-screenshot.desktop',
  'gnome-terminal.desktop',
  'nautilus.desktop',
  'slack.desktop',
  'update-manager.desktop']"

# Change github access from https to passwordless ssh
git remote set-url origin git@github.com:sthorsh/setup.git

# Done
echo "installation done..."

# Add ssh key to github (see further down for possible automation)
# xclip -sel clip < ~/.ssh/id_rsa.pub
# Go to: https://github.com/settings/keys

# Test passwordless github ssh access
# git commit -a -m "."
# git push origin master

# Required since jar-filename contains build number
# sudo ln -sf /usr/lib/idea-IC-<build-number>/ /usr/lib/idea-IC

# Set desktop background (automation is too much work)
# Use ~/Pictures/ubuntu-logo.jpg

# No need for this anymore
# rm ~/bang

# Reboot
# reboot

# Automation of: add ssh public key to github (if possible)
# Ref: https://unix.stackexchange.com/questions/136894/command-line-method-or-programmatically-add-ssh-key-to-github-com-user-account
# NB: Creates a public key. Requires that you are authenticated via Basic Auth, or OAuth with at least [write:public_key] scope.
# echo enter github ssh key label:
# read label
# echo \'{\"title\":\"${label}\",\"key\":\"`cat ~/.ssh/id_rsa.pub`\"\}\' https://api.github.com/user/keys
# curl -u "user" --data \'{\"title\":\"${label}\",\"key\":\"`cat ~/.ssh/id_rsa.pub`\"\}\' https://api.github.com/user/keys

# Install sqldeveloper
# Download to ~/install/
# sudo unzip ~/install/sqldeveloper-18.2.0.183.1748-no-jre.zip -d /usr/lib
# sudo ln -sf /usr/lib/sqldeveloper-18.2.0.183.1748-no-jre /usr/lib/sqldeveloper

# Configure sqldeveloper
# sqldeveloper hidpi 3840x2160 resolution support ref run_scaled.sh

# Configure squirrel
# squirrel hidpi 3840x2160 resolution support ref run_scaled.sh

