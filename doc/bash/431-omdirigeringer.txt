OMDIRIGERING

Operatorer
  <                   input redirect operator 
  >                   output redirect operator

Omdirigeringer
  cmd < f             open f for read; bruk f som stdin
  cmd << EOL          bruk N lines of text som stdin
  cmd <<< "..."       bruk single line of text som stdin

  cmd > f             open f for write; send stdout til f
  cmd > /dev/null     open bit bucket for write; send stdout til bit bucket
  cmd >| f            open f for overwrite; send stdout til f
  cmd >> f            open f for append; send stdout til f

  cmd 2> f            open f for write; send stderr til f
  cmd > f 2>&1        ...; dup stderr to be a copy of stdout

    exec 3< fil         open fd3 read fil
    read -n 5 var <&3   read dvs stdin dup fd3
    exec 3<&-           close fd3 dvs fd3 "copy" -

    exec 3> fil         open fd3 write fil 
    echo foo >&3        write dvs stdout dup fd3
    exec 3>&-           close fd3 dvs fd3 "copy" -

    exec 3<>fil         open fd3 read-write fil 

    cmd₁ | cmd₂         cmd₁-stdout write cmd₂-stdin
    cmd₁ |& cmd₂        cmd₁-stdout write cmd₂-stdin; cmd₁-stderr write cmd₂-stdin
    ...

For hver Unix-prosess inkl bash
  FD 0: standard input stream (stdin)
  FD 1: standard output stream (stdout)
  FD 2: standard error stream (stderr)
  FD 3: input/output stream
  ...

Tabeller
  Per-prosess fd-tabell: 0, 1, 2...
  System-wide filtabell: r, u, w... (modus)
  System-wide inodetabell: index number, file name
    
Når Bash starter
  0 → u → /dev/pts/1 (pseudoterminal)
  1 → u → /dev/pts/1 
  2 → u → /dev/pts/1 
  ...

Når Bash kjører kommando
  Bash fork'er barnprosess
  Barnet arver fd's fra bash 
  Bash etablerer evt omdirigeringer
  Bash kjører kommandoen evt m/omdirigeringer

Systemkall
  open, close, read, write, dup, ...

