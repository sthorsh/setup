Expression
- evaluate(Exchange, Class<T>): T

Predicate
- matches(Exchange): boolean

BuilderSupport
- body(): ValueBuilder
- constant(O): ValueBuilder
- exchangeProperty(S): ValueBuilder
- header(S): ValueBuilder
- jsonpath(S): ValueBuilder
- language(S, S): ValueBuilder
- method(Class<?>): ValueBuilder
- regexReplaceAll(E, S, S): ValueBuilder
- simple(S): SimpleBuilder
- systemProperty(S): ValueBuilder
- xpath(S): XPathBuilder

SimpleBuilder implements E, P
- ...

ValueBuilder implements E, P
- append(O): ValueBuilder
- contains(O): P
- convertTo(Class<?>): ValueBuilder
- endsWith(O): P
- in(O): P
- isEqualTo(O): P
- isGreaterThan(O): P
- isInstanceOf(Class<?>) : P
- isLessThan(O) : P
- isNotEqualTo(O) : P
- isNotNull(): P
- isNull(): P
- method(S): ValueBuilder        
- prepend(O): ValueBuilder
- regex(S) : P
- regexReplaceAll(S, S): ValueBuilder
- regexTokenize(S): ValueBuilder
- sort(Comparator<?>): ValueBuilder
- startsWith(O) : P
- tokenize(): ValueBuilder
- tokenizeXml(S, S): ValueBuilder

XPathBuilder implements E, P
- ...

PredicateBuilder
- and(P, P): P
- not(P): P
- or(P, P): P
- ...

