GIT                                             

git                                             usage
git TAB                                         vis cmds
git help -a | CMD                               vis alle cmds
git help -c                                     vis alle config vars

--------------------
git config                                      usage
git config TAB                                  vis sections
git config SECTION.TAB                          vis keys
git config -l [--show-scope --show-origin]      vis config vars, global ~/.gitconfig EL local .git/config
git config SECTION.KEY                          get config var
git config SECTION.KEY VALUE                    set config var

--------------------
git init [DIR]                                  init prosjekt

git clone URL [DIR]                             klon prosjekt

--------------------
git status --ignored                            vis branch, upstream, staged, unstaged, untracked, ignored

git diff [PATHS]                                vis diff wtree index
git diff R|C [PATHS]                            vis diff wtree commit
git diff --staged [PATHS]                       vis diff index HEAD
git diff --staged R|C [PATHS]                   vis diff index commit
git diff R|C R|C [PATHS]                        vis diff commit commit

git log -N                                      vis commitlog for HEAD
git log --oneline                               vis 1 linje per commit
git log --graph                                 vis commitlog som graf
git log --all                                   vis commitlog for HEAD og refs/*
git log REVISION_RANGE                          vis commitlog for revision range
git log PATH                                    vis commitlog for fil(er)

----------------
git stash list                                  vis stash
git stash show ENTRY                            vis entry
git stash -m MSG                                stash dvs stash<wtree<index
git stash apply ENTRY [--index]                 unstash dvs stash>wtree[>index]
git stash pop ENTRY [--index]                   unstash dvs stash>wtree[>index]
git stash drop ENTRY                            slett entry
git stash clear                                 slett entries

----------------
git add|stage PATH                              stage untracked|modified|deleted PATH dvs wtree>index

git mv SRC DST                                  stage dvs wtree>index
                                                           
git rm PATH                                     stage dvs wtree>index
git rm --cached PATH                            untrack PATH; rm fra index

git reset₁ [PATH]                               unstage dvs index<HEAD
git reset₁ --hard                               discard dvs wtree<index<HEAD

git restore PATH                                restore dvs wtree<index
git restore --staged PATH                       unstage dvs index<HEAD
git restore --worktree --staged PATH            discard dvs wtree<index<HEAD

---------------
git branch -avv                                 vis branches, upstreams, tracking branches
git branch b1 [R|C]                             ny branch
git branch b1 --track origin/b1                 ny branch; set upstream
git branch --set-upstream-to=origin/b1 b1       set branch.b1.remote og branch.b1.merge
git branch --unset-upstream b1                  unset upstream
git branch --move b1 NEW_NAME                   rename branch
git branch --delete b1                          slett branch
git branch --delete --remotes origin/b1         slett tracking branch

git tag                                         vis tags
git tag t1 [R|C]                                ny tag
git tag t1 --annotate -m MSG                    ny annotert tag
git tag --delete t1                             slett tag

git checkout R|C                                update HEAD
git checkout -b b1 [R|C]                        ny branch; checkout branch
git checkout --track origin/b1                  ny branch; set upstream; checkout branch

git switch b1                                   update HEAD
git switch --create b1 [R|C]                    ny branch; switch to branch

git reset₂ R|C [PATH]                           update branch; unstage
git reset₂ --soft R|C                           update branch 
git reset₂ --hard R|C                           update branch; discard
git reset₂ --merge                              kanseller merge konflikt

git commit -m MSG                               ny commit; set parent; update branch
git commit -am MSG                              stage; commit
git commit --amend -m MSG                       ny commit; set parent; update branch 

git revert R|C                                  ny commit; set parent; update branch

git cherry-pick R|C                             ny commit; set parent; update branch
git cherry-pick --abort|continue|quit|skip      hvis konflikt

git merge R|C -m MSG                            ny commit; set parents; update branch
git merge -m MSG                                fletter UPSTREAM inn i current branch
git merge --abort|continue|quit                 hvis konflikt

git rebase BRANCH                               nye commits; set parent; update branch
git rebase -i BRANCH                            interaktiv rebase
git rebase --abort|continue|quit|skip           hvis konflikt

-------------
git remote -v                                   vis remote repos
git remote add NAME URL                         nytt remote repo
git remote remove NAME                          slett remote repo
                                                
git fetch -v                                    branch.CURRENT_BRANCH.remote|origin remote.REPO.fetch
git fetch REPO -v                               REPO remote.REPO.fetch
git fetch REPO SRC -v                           NAME SRC:DST (DST = remote.NAME.fetch RHS)
git fetch REPO SRC:DST -v                       NAME SRC:DST

  git pull [--rebase] -v                        cf fetch; git merge branch.CURRENT_BRANCH.merge|remote.NAME.fetch #1
  git pull NAME [--rebase] -v                   cf fetch; git merge
  git pull NAME SRC [--rebase] -v               cf fetch; git merge DST ...
  git pull NAME SRC:DST [--rebase] -v           cf fetch; git merge DST ...

  git push -v                                   krever upstream
  git push NAME -v                              krever upstream
  git push NAME REFSPEC -v                      
  git push --set-upstream NAME REFSPEC -v       set upstream; ny tracking branch; ny remote branch
  git push --delete NAME REFSPEC -v             slett tracking branch; slett remote branch

