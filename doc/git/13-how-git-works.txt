HOW GIT WORKS

Git
  Distributed version control system (remote, ...)
  Version control system (branch, tag, merge, ...)
  High-level versioned file system (snapshot)
  Stupid content tracker (commit)
  Persistent map (.git)
  Map (bytesekvens â†’ hash)

-------------
Stash

Arbeidstre
  Clean|dirty state

Indeks
  .git/index

Repository
  .git/objects/ mfl

Remote repository

To spm for hver CMD
  Hvordan CMD evt "flytter" data?
  Hvordan CMD evt forandrer repositoriet?

----
HEAD
  Ref til current branch (og current commit)
  Evt ref til current commit (detached head)
  Cf peker .git/HEAD

Branch
  Ref til commit (entrypunkt til commit-historikk)
  Cf pekere .git/refs/heads/

Tag
  Ref til commit (entrypunkt til commit-historikk)
  Evt ref til et tag-objekt (annotert tag)
  Cf pekere .git/refs/tags/ immutables

Tag-objekt
  Representer annotert tag
  Peker til et objekt e.g commit
  Cf objektdb .git/objects/ immutables

Commit-objekt
  Representer commit/snapshot
  Peker til parent commits (historikk)
  Peker til et tree (arbeidstreets rot)
  Cf objektdb .git/objects/ immutables

Tree-objekt
  Representer katalog
  Peker til trees (fs)
  Peker til blobs (fs)
  Cf objektdb .git/objects/ immutables

Blob-objekt
  Representer e.g tekstfiler
  Cf objektdb .git/objects/ immutables

------
Beste praksis
  Aldri rebase en public branch  
  Never rebase shared commits (PP)
  Be careful when you revert merge commits

