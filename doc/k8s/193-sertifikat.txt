SERTIFIKAT

Nytt sertifikat for ny user

  # Create private key
  $ openssl genrsa -out demouser.key 2048

  # Create CSR
  $ openssl req -new -key demouser.key -out demouser.csr -subj "/CN=demouser"

  # Encode CSR
  $ cat demouser.csr | base64 | tr -d "\n" > demouser.base64.csr 

  # Apply CertificateSigningRequest
  $ cat <<EOF | kubectl apply -f -
    apiVersion: certificates.k8s.io/v1beta1
    kind: CertificateSigningRequest
    metadata:
      name: demouser
    spec:
      groups:
      - system:authenticated
      request: $(cat demouser.base64.csr)
      usages:
      - client auth
    EOF

  # Approve CSR
  $ kubectl certificate approve demouser

  # Get, decode, redirect cert
  $ kubectl get csr demouser -o jsonpath='{ .status.certificate }' | base64 --decode > demouser.crt

  # Read cert
  $ openssl x509 -in demouser.crt -text -noout
  
Bygg kubeconfig-fil

  # Set cluster
  $ kubectl config set-cluster kubernetes-demo \ 
  --server=https://192.168.56.101:6443 \
  --certificate-authority=ca.crt \
  --embed-certs=true \
  --kubeconfig=demouser.conf
  
  # Set credentials
  $ kubectl config set-credentials demouser \
  --client-key=demouser.key
  --client-certificate=demouser.crt \
  --embed-certs=true \
  --kubeconfig=demouser.conf

  # Set context
  $ kubectl config set-context demouser@kubernetes-demo  \
  --cluster=kubernetes-demo \
  --user=demouser \
  --kubeconfig=demouser.conf

  # Set current context
  $ kubectl config use-context demouser@kubernetes-demo --kubeconfig=demouser.conf

Bruk kubeconfig
  autentisering
  kryptering
  
