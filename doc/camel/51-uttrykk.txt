Expression
  - evaluate(Exchange, Class<T>): T

Predicate
  - matches(Exchange): boolean

ValueBuilder 
  append(Object): ValueBuilder
  - convertTo(Class<?>): ValueBuilder
  - method(S): ValueBuilder        
  prepend(Object): ValueBuilder
  - regexReplaceAll(S, S): ValueBuilder
  - regexTokenize(S): ValueBuilder
  - sort(Comparator<?>): ValueBuilder
  - tokenize(): ValueBuilder
  - tokenizeXml(S, S): ValueBuilder
  contains(Object): Predicate
  endsWith(Object): Predicate
  - in(O): P
  - isEqualTo(O): P
  - isGreaterThan(O): P
  - isInstanceOf(Class<?>) : P
  - isLessThan(O) : P
  - isNotEqualTo(O) : P
  - isNotNull(): P
  - isNull(): P
  - regex(S) : P
  - startsWith(O) : P

  SimpleBuilder
  - ...

  XPathBuilder
  - ...

  PredicateBuilder
  - and(P, P): P
  - not(P): P
  - or(P, P): P
  - ...

