HELM

CLI
  $ helm create
  $ helm get all
  $ helm history
  $ helm install
  $ helm list
  $ helm rollback
  $ helm status
  $ helm uninstall
  $ helm upgrade
  ...

Packet manager for k8s
  Helm/charts, apt/deb
  Run $ helm install demo-mysql stable/mysql (apt install)
  Run $ helm upgrade demo-mysql (apt update)
  Run $ helm uninstall demo-mysql (apt remove)
  Tenk på k8s (helm) som et OS (apt) for et cluster av maskiner

Med og uten helm
  Helm vs kubectl
  En app installeres som en entitet definert av et chart vs uavhengige yaml-filer
  En release er en instans av et chart vs instanser av uavhengige yaml-filer

Helm2 vs Helm3
  Helm2
    Klient helm, serverkomponent Tiller
    Helm -gRPC> tiller -http> apiserver
    Tiller: er en pod
    Tiller: manages releases
    Tiller: lagrer helm charts og install history i configmap i kube-system|... ns
    Tiller: trenger rettigheter for create/update/delete objekter
    Krav til installasjon: restricte Tillers rettigheter med en service account
    Krav til installasjon: kryptering av gRPC
  Helm3
    Klient helm
    Helm -http> apiserver
    Helm3 (library) bruker k8s klient til å snakke med api-server
    Helm3 (library) bruker k8s REST API og dets security layer (som alle andre k8s klienter)
    Helm3 lagrer release manifests/cfg/history som k8s secrets (i samme ns som app)

Helm2 vs Helm3
  Helm2
    Download/install helm2
    Run $ helm init: installerer Tiller som pod i default k8s cluster
    • Tiller pod kjører med kube-system ns sin default service account
    • Kube-system ns sin default service account har rolle cluster-admin
    • Dvs Tiller har alle privilegier/rettigheter for hele k8s clusteret (per default)
    • Dvs (1) vi må lage en Tiller service account for å begrense privilegier/rettigheter
    • Dvs (2) vi må kryptere Helm-Tiller gRPC med SSL nøkler/sertifikater på begge sider
  Helm3
    Download/install helm3
    Cfg helm3 → helm stable chart repository

Hvordan Helm3?
  Vi embedder k8s objekt-definisjoner (yaml) i en pakke (et chart)
  Vi sender chart til helm
  Helm connecter til api-server
  K8s instansierer objekter i default|... namespace (som kubectl)
  ...

Helm release

Helm update
  Three-way merge patches update
  Old chart, new chart, live state

