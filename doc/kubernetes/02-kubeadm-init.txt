KUBEADM INIT FASER

$ sudo kubeadm init --config=ClusterConfiguration.yaml --cri-socket /run/containerd/containerd.sock

  preflight            Kjører pre-flight checks
                       Puller images required for å sette opp et Kubernetes cluster

  certs                Bruker /etc/kubernetes/pki/
                       Genererer ca.crt og ca.key
                       Genererer apiserver.crt og apiserver.key
                       Genererer apiserver-kubelet-client.crt og apiserver-kubelet-client.key
                       Genererer front-proxy-ca.crt og front-proxy-ca.key
                       Genererer front-proxy-client.crt og front-proxy-client.key 
                       Genererer etcd/ca.crt og etcd/ca.key
                       Genererer etcd/server.crt og etcd/server.key
                       Genererer etcd/peer.crt og etcd/peer.key
                       Genererer etcd/healthcheck-client.crt og etcd/healthcheck-client.key
                       Genererer apiserver-etcd-client.crt og apiserver-etcd-client.key
                       Genererer sa.key og sa.pub

  kubeconfig           Bruker /etc/kubernetes/
                       Genererer admin.conf
                       Genererer kubelet.conf
                       Genererer controller-manager.conf
                       Genererer scheduler.conf

  kubelet-start        Genererer /var/lib/kubelet/kubeadm-flags.env
                       Genererer /var/lib/kubelet/config.yaml
                       Starter kubelet

  control-plane        Bruker /etc/kubernetes/manifests/
                       Genererer Pod manifest for kube-apiserver
                       Genererer Pod manifest for kube-controller-manager
                       Genererer Pod manifest for kube-scheduler

  etcd                 Bruker /etc/kubernetes/manifests/
                       Genererer Pod manifest for etcd

  wait-control-plane   Venter på at kubelet booter opp kontrollplanet dvs Pods i /etc/kubernetes/manifests/

  upload-config        Laster opp kubeadm ClusterConfiguration i configmap kubeadm-config
                       Laster opp kubelet configuration i configmap kubelet-config-1.20

  upload-certs         Skipping phase. Please see --upload-certs

  mark-control-plane   Marking the node c1-cp1 as control-plane by adding the taints

  bootstrap-token      Bruker bootstrap token: abcdef.0123456789abcdef
                       Konfigurerer bootstrap tokens, cluster-info ConfigMap, RBAC roller
                       Konfigurerer RBAC regler: tillat Node Bootstrap tokens å get nodes
                       Konfigurerer RBAC regler: tillat Node Bootstrap tokens å poste CSRs for at noder skal få long term certificate credentials
                       Konfigurerer RBAC regler: tillat csrapprover controller å automatisk godkjenne CSRs fra et Node Bootstrap Token
                       Konfigurerer RBAC regler: tillat sertifikatrotasjon for alle node client certificates i clusteret
                       Oppretter ConfigMap cluster-info i namespace kube-public

  kubelet-finalize     Oppdaterer kubeconfig fil /etc/kubernetes/kubelet.conf

  addons               Installerer CoreDNS
                       Installerer kube-proxy

  Kontrollplanet er initialisert!
  
  1. Hvis du er vanlig bruker, gjør flg for å bruke clusteret:
     $ mkdir -p $HOME/.kube
     $ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
     $ sudo chown $(id -u):$(id -g) $HOME/.kube/config
  
     Evt hvis du er rotbruker, gjør flg for å bruke clusteret:
     $ export KUBECONFIG=/etc/kubernetes/admin.conf
  
  2. Deploy et podnettverk:
     $ kubectl apply -f podnetwork.yaml (cf https://kubernetes.io/docs/concepts/cluster-administration/addons/)
  
  3. Join node til clusteret:
     $ sudo kubeadm join 192.168.56.100:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash CA_CERT_HASH
  
