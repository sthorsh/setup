CamelInternalProcessor.process():122
  processor.process(exchange, ...)

Pipeline.process():84
  while it.hasNext() && !exchange.getProperty(Exchange.ROUTE_STOP)
    processor.process(exchange, ...)
    if (exchange.getException() != null ||
        exchange.getProperty(Exchange.ERRORHANDLER_HANDLED) ||
        exchange.getIn().isFault() || 
        exchange.getOut().isFault() ||
        exchange.isRollbackOnly() || 
        exchange.getProperty(Exchange.ROUTE_STOP))
      break
  end while
 
RedeliveryErrorHandler.process():421
  data.original = defensiveCopyExchangeIfNeeded(exchange)
  while true
    if (exchange.getException() != null)
      e = exchange.getException()
      // if 2nd exception
      exchange.setProperty(Exchange.EXCEPTION_CAUGHT, e) 
      // if onException()
      log failed delivery
      data.redeliveryCounter++
      // if onExceptionOccurred()

    if (exchange.getProperty(Exchange.REDELIVERY_EXHAUSTED) || ...)
      target = null | dlc | data.failureProcessor
      caught = exchange.getException()
      exchange.setException(null)
      if (null)
        exchange.setProperty(Exchange.FAILURE_HANDLED, true)
        exchange.setException(exchange.getProperty(Exchange.EXCEPTION_CAUGHT))
      // if (dlc )
      // if (continued)
      // if (handled/bean/process/to)
      log exhausted delivery
      return
    if (data.redeliveryCounter > 0)
      exchange.setException(null)
      exchange.getIn().copyFrom(data.original.getIn())
    processor.process(exchange, ...)
    if (exchange.getException() == null || 
        exchange.getProperty(Exchange.FAILURE_HANDLED)
        exchange.getProperty(Exchange.REDELIVERY_EXHAUSTED))
      return
  end while
      
Processor.process():N
  try { ... }
  catch (Throwable t) { exchange.setException(t); }
  return
