BUILD PHASES

Build phases
  Gradle evaluates and executes build scripts in three phases

Phase 1: initialization
  Set up the environment for the build (eval init script)
  Determine which projects will take part in it (eval settings script)

Phase 2: configuration
  Constructs the task graph for the build (DAG)
  Configures the task graph for the build (eval build scripts)
  Determines which tasks need to run and in which order, based on the task the user wants to run.
  • everything involved in this phase is evaluated every time the build runs.

Phase 3: execution
  Runs the tasks selected at the end of the configuration phase (eval build script tasks actions)

Phases → scripts
  Initialize: init.gradle, settings.gradle
  Configure: build.gradle
  Execute: build.gradle task action


----------------------
FROM https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:buildscript

Lifecycle
There is a one-to-one relationship between a Project and a "build.gradle" file. During build initialisation, Gradle
assembles a Project object for each project which is to participate in the build, as follows:

Create a Settings instance for the build.
Evaluate the "settings.gradle" script, if present, against the Settings object to configure it.
Use the configured Settings object to create the hierarchy of Project instances.
Finally, evaluate each Project by executing its "build.gradle" file, if present, against the project. The projects are
evaluated in breadth-wise order, such that a project is evaluated before its child projects. This order can be
overridden by calling evaluationDependsOnChildren() or by adding an explicit evaluation dependency using
evaluationDependsOn(String).
