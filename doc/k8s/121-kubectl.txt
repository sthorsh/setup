KUBECTL

kubectl [cmd] [subcmds] [type] [name] [global_opts] [cmd_opts]

  kubectl <ht> 
  kubectl <cr> 
  kubectl options
  kubectl <cmd> <ht> 
  kubectl <cmd> <cr> 
 
  ---------------------
  kubectl version --short

  kubectl config SUBCMD
  kubectl cluster-info [dump]
  
  kubectl api-resources
  kubectl api-versions
  kubectl explain RESOURCE.FIELD.FIELD...

  ----------------------------------
  kubectl apply -f FILE --record -v6
  
  kubectl create configmap CM_NAME ...
  kubectl create deployment DEP_NAME --image=nginx [--dry-run] [-o yaml]
  kubectl create service SVC_TYPE SVC_NAME --tcp 8080:80 [--dry-run] [-o yaml]
  kubectl create -f FILE --record --save-config
  
  kubectl run [POD_NAME] --image IMAGE
  
  kubectl expose TYPE NAME --port=80 --target-port=8080 --type=NodePort [--dry-run] [-o yaml] 
  kubectl expose -f FILE --port=80 --target-port=8080 --type=NodePort [--dry-run] [-o yaml] 
  
  kubectl rollout status deployment NAME
  kubectl rollout history deployment NAME [--revision N]
  kubectl rollout restart deployment NAME
  kubectl rollout pause deployment NAME
  kubectl rollout resume deployment NAME
  kubectl rollout undo deployment NAME [--to-revision N]
  
  ----------------------------------
    kubectl get RESOURCE_NAME [-n ns] NAME 
    kubectl get RESOURCE_NAME [-n ns] NAME --selector query 
    kubectl get RESOURCE_NAME [-n ns] NAME --show-labels
    kubectl get RESOURCE_NAME [-n ns] NAME --output json|jsonpath=expr|wide|yaml
    kubectl get RESOURCE_NAME [-n ns] NAME --watch
    kubectl get all --all-namespaces
    kubectl get -f [FILE]
  
    kubectl describe RESOURCE NAME
    kubectl describe -f FILE
  
  ----------------------------------
    kubectl exec [-it] POD_NAME -- CMD
  
    kubectl logs POD_NAME [-c ctr] --follow
  
  ! kubectl proxy --port=8080 (run kubectl as a reverse proxy)
  
  ! kubectl port-forward deployment.apps/my-nginx 8181:80 (localhost → pod, no svc)
  ! kubectl port-forward my-web-6ff4786956-6bp6h 8181:80  (localhost → pod, no svc)
  
  ----------------------------------
    kubectl set SUBCMD 
  
    kubectl scale deployment NAME --replicas 5
    kubectl scale -f FILE --replicas 5
    
    kubectl annotate RESOURCE NAME KEY=VALUE
    kubectl annotate RESOURCE NAME KEY=VALUE --overwrite
    kubectl annotate RESOURCE NAME KEY-
  
    kubectl label RESOURCE NAME KEY=VALUE
    kubectl label RESOURCE NAME KEY=VALUE --overwrite
    kubectl label RESOURCE NAME KEY-
  
  ----------------------------------
    kubectl delete -f FILE
    kubectl delete RESOURCE NAME [--all] [--force]
  
    ------------------------
    kubectl cordon NODE_NAME
    kubectl uncordon NODE_NAME
  
    kubectl drain NODE_NAME
    kubectl taint node NODE_NAME TAINT
