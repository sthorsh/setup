OMDIRIGERING

Syntaks
  cmd < fil           stdin read fra fil
  cmd << EOL          stdin read fra here-doc
  cmd <<< "..."       stdin read fra here-string

  cmd > fil           stdout write til fil
  cmd >| fil          stdout overwrite fil
  cmd >> fil          stdout append til fil
  cmd > /dev/null     stdout write til null device

  cmd 2> fil          stderr write til fil
  cmd > fil 2>&1      stderr dup stdout

  exec 3< fil         open fd3 for read fra fil (persistent)
  read -n 5 var <&3   read dvs stdin dup fd3
  exec 3<&-           close fd3 dvs fd3 dup - (undo)

  exec 3> fil         open fd3 for write til fil (persistent)
  echo foo >&3        write dvs stdout dup fd3
  exec 3>&-           close fd3 dvs fd3 dup - (undo)

  exec 3<>fil         open fd3 for read-write fra-til fil (persistent)

  cmd₁ | cmd₂         cmd₁ stdout til cmd₂ stdin
  cmd₁ 2>&1 | cmd₂    cmd₁ stdout og stderr til cmd₂ stdin
  ...

Om syntaks
  Operatorer kan stå foran, i, eller etter cmd
  Prosesseres fra venstre mot høyre dvs rekkefølge teller
  RHS utsettes for ekspansjon og quote removal

------------
Omdirigering
  Manipulering av fildeskriptortabeller

Fil
  Alt i linux er en fil
  Alle prosesser har stdin, stdout, stderr

Fildeskriptor
  En fildeskriptor en en handle for en fil
  En fildeskriptor er et tall 0,1,2,...255

Fildeskriptortabell
  Per-prosess fildeskriptortabell: lsof -p $$
  Fildeskriptortabell --> filtabell --> inodetabell
  Operasjoner: open, close, read, write, copy/dup(licate)
  Bash åpner fd0, fd1, og fd2; fd3... åpnes programmatisk
  En kommando arver fildeskriptorer fra sin foreldreprosess

