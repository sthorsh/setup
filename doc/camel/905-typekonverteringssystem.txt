Lasting
- Auto: vha AnnotationTypeConverterLoader
- Manuelt: vha TypeConverterRegistry.addTypeConverter(...);

TypeConverterLoader
- load(TypeConverterRegistry): void

AnnotationTypeConverterLoader
- findPackages(Set<String>, ClassLoader): void
↑ load(TypeConverterRegistry): void
- loadConverterMethods(TypeConverterRegistry, Class<?>): void
- registerTypeConverter(TypeConverterRegistry, ..., TypeConverter): void
- ...

BundleTypeConverterLoader
↑ load(TypeConverterRegistry): void
- register(): void

TypeConverterRegistry
- addTypeConverter(Class<?>, Class<?>, TypeConverter): void
- listAllTypeConvertersFromTo(): List<Class<?>[]> 
- lookup(Class<?>, Class<?>): TypeConverter
- ...

BaseTypeConverterRegistry
↑ addTypeConverter(Class<?>, Class<?>, TypeConverter): void
↑ listAllTypeConvertersFromTo(): List<Class<?>[]> 
↑ lookup(Class<?>, Class<?>): TypeConverter
- ...

DefaultTypeConverter
- doStart(): void
- ...

