KUBECTL

  kubectl [cmd] [subcmds] [type] [name] [global_opts] [cmd_opts]
  
  kubectl <ht>
  kubectl <cr>
  kubectl <cmd> <ht>
  kubectl <cmd> <cr>
  kubectl <cmd> --help

  ---------
  kubectl options (-n NS, -v 6..N)

  ---------
  kubectl config SUBCMD --help
  kubectl proxy [--port=8080] & (connects, authenticates)

  ---------
  kubectl version --short
  kubectl cluster-info [dump]
  kubectl api-resources [--api-group GROUP] [--namespaced=true|false]
  kubectl api-versions
  kubectl explain RESOURCE.FIELD... [--api-version VERSION]

  ---------
  kubectl create ns NAME [--dry-run] [-o yaml]
  kubectl create deployment NAME --image=IMAGE [--dry-run] [-o yaml]
  kubectl create svc TYPE NAME --tcp 8080:80 [--dry-run] [-o yaml]
  kubectl create cm NAME [--from-literal k=v] [--dry-run] [-o yaml]
  kubectl create -f FILE|DIR --record --save-config
  
  kubectl run NAME --image IMAGE [--dry-run] [-o yaml]

  kubectl expose RESOURCE NAME --type=NodePort --port=8080 --target-port=80 [--dry-run] [-o yaml]
  kubectl expose -f FILE --type=NodePort --port=80 --target-port=8080

  kubectl apply -f FILE|DIR --record [--dry-run] [-o yaml]

  kubectl rollout SUBCMD --help
  kubectl rollout status|history|restart|pause|resume|undo RESOURCE [NAME] OPTS
  
  kubectl scale RESOURCE[S] --replicas 5
  kubectl scale -f FILE --replicas 5
  
  ---------
  kubectl get RESOURCE NAME (nb: events)
  kubectl get RESOURCE [-A] [-l LABEL_QUERY] ...
  kubectl get all [-A] [-l LABEL_QUERY] ...
  kubectl get RESOURCE[S] -L key₁,key₂,... -o json|wide|yaml --show-labels --watch &
  kubectl get -f [FILE]
  
  kubectl describe RESOURCE[S] (nb: svc, ep, nodes)
  kubectl describe -f [FILE]
  
  ---------
  kubectl annotate RESOURCE[S] key=value
  kubectl annotate RESOURCE[S] key=value --overwrite
  kubectl annotate RESOURCE[S] key-

  kubectl label RESOURCE[S] key=value
  kubectl label RESOURCE[S] key=value --overwrite
  kubectl label RESOURCE[S] key-

  kubectl set SUBCMD --help
  kubectl set env|image|resources|selector|serviceaccount|subject RESOURCE[S] ...

  kubectl edit RESOURCE[S]

  ---------
  kubectl cp FILE POD:/PATH
  
  kubectl exec [-it] POD -- CMD
  
  kubectl logs POD [-c CTR] [-f] [--timestamp]
  kubectl logs -l LABEL_QUERY [-c CTR] [-f] [--timestamp]

  kubectl port-forward POD 8181:8080 & (hello-app)
  kubectl port-forward POD 8181:80 & (nginx)
  
  ---------
  kubectl cordon NODE[S]
  kubectl uncordon NODE[S]
  kubectl drain NODE[S]
  kubectl taint node NODE[S] TAINT

  ---------
  kubectl delete RESOURCE[S] [--force]
  kubectl delete -f FILE|DIR

LABEL_QUERY
  key
  !key
  key=value
  key!=value
  key in (str₁,str₂,...) (or)
  key notin (str₁,str₂,...)
  query₁,query₂,... (and)

