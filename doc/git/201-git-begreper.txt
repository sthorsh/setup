BEGREPER

Git
  Map: key bytes, value hash/sha-1
  Persistent map: .git
  Stupid content tracker: commit
  Version control system: commit → parents
  High-level versioned file system: trees, blobs
  Distributed version control system: remote etc

Areas
  Stash
  Wtree
  Index
  Repository
  Remote repository

Trees
  Wtree
  Index
  HEAD → branch → current_commit


---------
HEAD
  Ref til ref
  Evt ref til commit (detached head)
  Cf .git/HEAD

Branch
  Ref til commit
  Cf .git/refs/heads/

Tracking branch
  Ref til commit
  Cf .git/refs/remotes/

Tag
  Ref til commit
  Evt ref til tag-objekt (annotert tag)
  Cf .git/refs/tags/ immutables

Tag-objekt
  Peker til objekt e.g commit
  Cf objektdb .git/objects/ immutables

Commit-objekt
  Peker til parent commit(s)
  Peker til tree (arbeidstreets rot)
  Cf objektdb .git/objects/ immutables

Tree-objekt
  Peker til trees (tenk fs)
  Peker til blobs (tenk fs)
  Cf objektdb .git/objects/ immutables

Blob-objekt
  Cf objektdb .git/objects/ immutables

---------
Cmds
  How does CMD change the repository?
  How does CMD move data between areas?

Fetch
  Hvor skal git hente fra?
    - Fra et "remote" repository
    - I prioritert rekkefølge: REMOTE | current branch's upstream | default remote dvs origin
  Hva skal git hente?   
    - Refs dvs branches iht refspec lhs
    - Refs dvs tags 
    - Objekter 
  Hva skal git oppdatere?
    - refs iht refspec rhs feks tracking branches dvs refs/remotes/origin/ (refdb)
    - refs dvs tags dvs refs/tags/ (refdb)
    - objekter dvs objects/ (objektdb)

Pull
  Cf fetch
  Hvordan skal git oppdatere lokale branches? Fast-forward, merge eller rebase

Push

=========================
References
https://www.atlassian.com/git/tutorials/refs-and-the-reflog

