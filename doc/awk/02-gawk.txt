Pattern
  BEGIN
  BEGINFILE
  Utrykk
  Pat₁, pat₂
  ENDFILE
  END

Actions
  getline [var or < file or var < file]
    if(exp) stmt; else stmt
    switch(exp) { case konstant: stmt ...; default: stmt }
    for(exp; exp; exp) stmt
    for(key in assoc_arr) stmt
    while(exp) stmt
    do stmt while(exp)
    break
    continue
    exit
    delete assoc_arr[key]
    next
    nextfile
    print exp, ... > "file"
    printf "...", exp, ... > "file"
    { stmt; ...}

Uttrykk
  1 01 0x1 1.1 1.1e1          konstant tall
  "foo"                       konstant string
  foo                         variabel
  foo[exp]                    assoc_arr-ref
  foo(...)                    funksjonskall
  ()                          presedens
  $exp                        feltref e.g $0, $1, $NF
  ++ --                       inkrement, dekrement
  ^ **                        eksponent
  + - !                       unær pluss, unær minus, not
  * / %                       gange, dele, rest
  + -                         pluss, minus
  ∅                           konkatenere
  | |&                        omdirigere
  < <= == != > >= >>          sammenligne
  ~ !~                        /regexp/; exp ~ /regexp/; exp₁ ~ exp₂ (EREs, case)
  in                          medlem i assoc_arr
  &&                          og
  ||                          eller
  ?:                          ternær
  = += -= *= /= %= ^= **=     tilordning (stmt/exp)

