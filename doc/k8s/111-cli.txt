CLI

kubectl
  $ kubectl<cr>
  $ kubectl <ht>
  $ kubectl <cmd> --help
  $ kubectl <cmd> -v 6..9

kubectl <cmd>
  $ kubectl annotate <resource> <name> key=value
  $ kubectl api-resources --namespaced
  $ kubectl api-versions

  $ kubectl apply -f <dir>
  $ kubectl apply -f <manifest> --record

  $ kubectl cluster-info

  $ kubectl config [get-contexts] [view]

  $ kubectl create -f <dir>
  $ kubectl create -f <manifest> --save-config
  $ kubectl create service clusterip my-svc --tcp=80:80 [--dry-run=client] [--output=yaml]

  $ kubectl delete -f <dir>
  $ kubectl delete -f <manifest>
  $ kubectl delete <type> [--force] <name>

  $ kubectl describe -f <manifest>
  $ kubectl describe <type> <name>

  $ kubectl edit <type> <name>

  $ kubectl exec <pod> [-it] -- <cmd>
  $ kubectl exec <pod> -- curl 172.17.0.2:80

  $ kubectl explain pod.spec --api-version v1

  $ kubectl get -f <manifest> 
  $ kubectl get <kind> [name] --namespace app-ns --selector <query>
  $ kubectl get <kind> [name] --show-kind --show-labels -o yaml
  $ kubectl get events

  $ kubectl label <resource> <name> key=value (create)
  $ kubectl label <resource> <name> key=value --overwrite (update)
  $ kubectl label <resource> <name> key- (delete)

  $ kubectl logs -f <pod>

  $ kubectl port-forward pod/my-pod 8080:80 & (localhost:8080)
  $ kubectl port-forward deployment/my-dpm 8080:80 & (localhost:8080)
  $ kubectl port-forward service/my-svc 8080:80 & (localhost:8080)

  $ kubectl proxy

  $ kubectl replace ...

  $ kubectl rollout <cmd> ...

  $ kubectl run ws-pod --image=nginx
  
  $ kubectl scale -f <manifest> --replicas=5
  $ kubectl scale <type> <name> --replicas=5
                                   
